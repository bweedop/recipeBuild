{"version":3,"sources":["Components/Autocomplete.js","App.js","index.js"],"names":["Autocomplete","state","activeOption","filteredOptions","showOptions","userInput","title","ingredients","description","type","onChange","e","options","props","currentTarget","value","filter","option","toLowerCase","indexOf","setState","onClick","filteredOption","innerText","onKeyDown","keyCode","showSuggestions","length","submitInput","currentRecipe","recipes","recipe","optionList","this","className","map","optionName","index","key","Fragment","i","React","Component","App","recipeNames","console","log","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.03d894a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport recipes from \"../data/recipesDB.json\";\r\n\r\nexport class Autocomplete extends React.Component {\r\n  static propTypes = {\r\n    options: PropTypes.instanceOf(Array).isRequired\r\n  };\r\n\r\n  state = {\r\n    activeOption: 0,\r\n    filteredOptions: [],\r\n    showOptions: false,\r\n    userInput: \"\",\r\n    title: \"\",\r\n    ingredients: [],\r\n    description: \"\",\r\n    type: \"\"\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const { options } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n    const filteredOptions = options.filter(\r\n      (option) => option.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n    this.setState({\r\n      activeOption: 0,\r\n      filteredOptions,\r\n      showOptions: true,\r\n      userInput\r\n    });\r\n  };\r\n\r\n  onClick = (e) => {\r\n    this.setState({\r\n      activeOption: 0,\r\n      filteredOption: [],\r\n      showOptions: false,\r\n      userInput: e.currentTarget.innerText,\r\n      title: \"\",\r\n      ingredients: [],\r\n      description: \"\",\r\n      type: \"\"\r\n    });\r\n  };\r\n\r\n  onKeyDown = (e) => {\r\n    const { activeOption, filteredOptions } = this.state;\r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeOption: 0,\r\n        showSuggestions: false,\r\n        showOptions: false,\r\n        userInput: filteredOptions[activeOption],\r\n        title: \"\",\r\n        ingredients: [],\r\n        description: \"\",\r\n        type: \"\"\r\n      });\r\n    } else if (e.keyCode === 38) {\r\n      if (activeOption === 0) {\r\n        return;\r\n      }\r\n      this.setState({ activeOption: activeOption - 1 });\r\n    } else if (e.keyCode === 40) {\r\n      if (activeOption - 1 === filteredOptions.length) {\r\n        return;\r\n      }\r\n      this.setState({ activeOption: activeOption + 1 });\r\n    }\r\n  };\r\n\r\n  submitInput = () => {\r\n    if (this.state.userInput !== \"\") {\r\n      const currentRecipe = recipes.filter(\r\n        (recipe) => recipe.title === this.state.userInput\r\n      );\r\n      if (currentRecipe.length === 1) {\r\n        this.setState({\r\n          userInput: \"\",\r\n          title: this.state.title + currentRecipe[0].title,\r\n          ingredients: [\r\n            ...this.state.ingredients,\r\n            ...currentRecipe[0].ingredients\r\n          ],\r\n          description: this.state.description + currentRecipe[0].description,\r\n          type: this.state.type + currentRecipe[0].type\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      submitInput,\r\n      state: {\r\n        activeOption,\r\n        filteredOptions,\r\n        showOptions,\r\n        userInput,\r\n        title,\r\n        ingredients,\r\n        description,\r\n        type\r\n      }\r\n    } = this;\r\n    let optionList;\r\n    if (showOptions && userInput) {\r\n      if (filteredOptions.length) {\r\n        optionList = (\r\n          <ul className=\"options\">\r\n            {filteredOptions.map((optionName, index) => {\r\n              let className;\r\n              if (index === activeOption) {\r\n                className = \"option-active\";\r\n              }\r\n              return (\r\n                <li className={className} key={optionName} onClick={onClick}>\r\n                  {optionName}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        optionList = (\r\n          <div className=\"no-options\">\r\n            <em>No Option!</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-box\"\r\n            onChange={onChange}\r\n            onKeyDown={onKeyDown}\r\n            value={userInput}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"\"\r\n            onClick={submitInput}\r\n            className=\"search-btn\"\r\n          />\r\n        </div>\r\n        {optionList}\r\n        <div className=\"recipe\">\r\n          <h2>{title}</h2>\r\n          <em>{type}</em>\r\n          <ul>\r\n            {ingredients.map((i) => (\r\n              <li>{i}</li>\r\n            ))}\r\n          </ul>\r\n          <p>{description}</p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from \"react\";\nimport Autocomplete from \"./Components/Autocomplete\";\nimport \"./styles.css\";\n\nimport recipes from \"./data/recipesDB.json\";\n\nexport default function App() {\n  const recipeNames = recipes.map((recipe) => recipe.title);\n  console.log(recipeNames);\n\n  return (\n    <div className=\"App\">\n      <Autocomplete options={recipeNames} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}